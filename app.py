# -*- coding: utf-8 -*-
"""Insightgenerator.txt

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15etoTQlfjXVFGgRktnHYDMo8nhKGdP5E
"""

!pip install openai pandas matplotlib seaborn --quiet

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import openai
from google.colab import files
import zipfile
import os
import glob



print("Upload your ZIP file containing CSV/Excel files...")
uploaded = files.upload()

zip_file = list(uploaded.keys())[0]

extract_path = '/content/data'
with zipfile.ZipFile(zip_file, 'r') as zip_ref:
    zip_ref.extractall(extract_path)

print(" Extracted files:")
print(os.listdir(extract_path))

csv_files = glob.glob(os.path.join(extract_path, "*.csv"))
excel_files = glob.glob(os.path.join(extract_path, "*.xlsx"))

print("\nCSV files found:", csv_files)
print("Excel files found:", excel_files)

if csv_files:
    df = pd.read_csv(csv_files[0])
    print("\nLoaded CSV file:", csv_files[0])
elif excel_files:
    df = pd.read_excel(excel_files[0])
    print("\nLoaded Excel file:", excel_files[0])
else:
    raise Exception("No CSV or Excel files found in the ZIP.")

print("\nüìä Data Preview:")
display(df.head())

print("\nüìà Data Summary:")
summary = df.describe(include='all')
display(summary)

numeric_cols = df.select_dtypes(include='number').columns
if len(numeric_cols) > 0:
    plt.figure(figsize=(6,4))
    sns.histplot(df[numeric_cols[0]], kde=True)
    plt.title(f"Distribution of {numeric_cols[0]}")
    plt.show()
else:
    print("‚ö†Ô∏è No numeric columns found for plotting.")

!pip install openai==0.28.0

!pip install streamlit

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

st.title("My Data Dashboard")

uploaded_file = st.file_uploader("Upload CSV file", type=["csv"])
if uploaded_file:
    df = pd.read_csv(uploaded_file)
    st.write("Preview of Data:")
    st.dataframe(df.head())

    st.write("Summary Statistics")
    st.write(df.describe())

    # Example chart
    st.line_chart(df[df.columns[0]])

!pip install streamlit
!npm install -g localtunnel

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# 
# st.title("My Dashboard in Colab")
# 
# uploaded_file = st.file_uploader("Upload CSV", type=["csv"])
# if uploaded_file:
#     df = pd.read_csv(uploaded_file)
#     st.write("Preview:")
#     st.dataframe(df.head())

# Commented out IPython magic to ensure Python compatibility.
# %%writefile requirements.txt
# streamlit
# pandas
# matplotlib
# seaborn
# openai

!pip install openai pandas matplotlib seaborn streamlit --quiet
print("All required libraries installed.")

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import openai
from google.colab import files
import zipfile
import os
import glob
import streamlit as st # Imported for use in app.py logic
print("All libraries imported.")

# --- Colab Data Ingestion ---
print("Upload your ZIP file containing CSV/Excel files...")
# This will open a file selection dialog in your browser
uploaded = files.upload()

if not uploaded:
    raise Exception("No file was uploaded. Please upload your data ZIP file.")

zip_file = list(uploaded.keys())[0]
extract_path = '/content/data'

# Create the directory if it doesn't exist
os.makedirs(extract_path, exist_ok=True)

# Extract the ZIP contents
with zipfile.ZipFile(zip_file, 'r') as zip_ref:
    zip_ref.extractall(extract_path)

print(f"Extracted files to: {extract_path}")
print("Files found:", os.listdir(extract_path))

# Find and load the first CSV or Excel file
csv_files = glob.glob(os.path.join(extract_path, "*.csv"))
excel_files = glob.glob(os.path.join(extract_path, "*.xlsx"))

df = None
if csv_files:
    df = pd.read_csv(csv_files[0])
    print("\nLoaded CSV file:", csv_files[0])
elif excel_files:
    df = pd.read_excel(excel_files[0])
    print("\nLoaded Excel file:", excel_files[0])
else:
    raise Exception("No CSV or Excel files found in the ZIP.")

# Display basic analysis (for Colab check)
print("\nüìä Data Preview:")
display(df.head())
print("\nüìà Data Summary:")
display(df.describe(include='all'))

# Basic plot (for Colab check)
numeric_cols = df.select_dtypes(include='number').columns
if len(numeric_cols) > 0:
    plt.figure(figsize=(6,4))
    sns.histplot(df[numeric_cols[0]], kde=True)
    plt.title(f"Distribution of {numeric_cols[0]}")
    plt.show()
else:
    print("‚ö†Ô∏è No numeric columns found for plotting.")